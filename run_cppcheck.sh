#!/bin/bash

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
RESET='\033[0m'

# === –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫—Ä–∏–ø—Ç–µ ===
VERSION="1.1.1"
AUTHOR="RockDar ü´°"
BUILD_DATE="2025-04-17"

# === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–ø—Ä–∞–≤–∫–∞ ===
echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo -e "‚ïë         Cppcheck Report Generator          ‚ïë"
echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}"
echo -e "${GREEN}Version:${RESET}     $VERSION"
echo -e "${GREEN}Build date:${RESET} $BUILD_DATE"
echo -e "${GREEN}Author:${RESET}      $AUTHOR"
echo

echo -e "${YELLOW}üìå Usage:${RESET} $0 [path] [--std=c++17] [--open]"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
for cmd in cppcheck cppcheck-htmlreport xmlstarlet; do
    if ! command -v "$cmd" &>/dev/null; then
        echo -e "${RED}‚ùå '$cmd' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${RESET}"
        exit 1
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ wkhtmltopdf (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
PDF_AVAILABLE=true
if ! command -v wkhtmltopdf &>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è wkhtmltopdf –Ω–µ –Ω–∞–π–¥–µ–Ω. PDF-—ç–∫—Å–ø–æ—Ä—Ç –æ—Ç–∫–ª—é—á–µ–Ω.${RESET}"
    PDF_AVAILABLE=false
fi

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
STD="c++17"
OPEN_REPORT=false

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
for arg in "$@"; do
    case $arg in
        --std=*) STD="${arg#*=}";;
        --open) OPEN_REPORT=true;;
    esac
done

# –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç)
PROJECT_PATH="$1"
if [[ -z "$PROJECT_PATH" || "$PROJECT_PATH" == --* ]]; then
    read -e -p "üóÇ –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: " PROJECT_PATH
    read -p "üìò –°—Ç–∞–Ω–¥–∞—Ä—Ç C++ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é c++17): " STD_IN
    [[ -n "$STD_IN" ]] && STD="$STD_IN"
    read -p "üß≠ –û—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ? [y/N]: " OPEN_IN
    [[ "$OPEN_IN" =~ ^[Yy]$ ]] && OPEN_REPORT=true
fi

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤—ã—Ö –ø—É—Ç–µ–π
REPORT_DIR="cppcheck-html"
TMP_XML_RAW="cppcheck_raw.xml"
LOG_FILE="cppcheck_log.txt"

# –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–µ–∫—Ç–∞
cd "$PROJECT_PATH" || { echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ $PROJECT_PATH${RESET}"; exit 1; }

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
rm -rf "$REPORT_DIR" "$TMP_XML_RAW" "$LOG_FILE"
mkdir -p "$REPORT_DIR"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "[$(date)] –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω" > "$LOG_FILE"

# === –ó–∞–ø—É—Å–∫ Cppcheck –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ XML ===
echo -e "${BLUE}üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é Cppcheck...${RESET}"
echo "[$(date)] Starting Cppcheck analysis..." >> "$LOG_FILE"
cppcheck --enable=all --std="$STD" --xml --xml-version=2 . 2> "$TMP_XML_RAW"
echo "[$(date)] XML analysis complete." >> "$LOG_FILE"

# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞ ===
echo -e "${BLUE}üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞...${RESET}"
echo "[$(date)] Generating HTML report..." >> "$LOG_FILE"
cppcheck-htmlreport --file="$TMP_XML_RAW" --report-dir="$REPORT_DIR" --source-dir="." >> "$LOG_FILE" 2>&1
HTML_EXIT=$?
echo "[$(date)] cppcheck-htmlreport exit code: $HTML_EXIT" >> "$LOG_FILE"

# –ü–æ–¥—Å—á–µ—Ç –æ—à–∏–±–æ–∫
ERROR_COUNT=$(grep -c '<error ' "$TMP_XML_RAW")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
if [[ $HTML_EXIT -ne 0 ]]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML (–∫–æ–¥ $HTML_EXIT). –°–º. –ª–æ–≥: $PROJECT_PATH/$LOG_FILE${RESET}"
    exit 1
fi
if [[ ! -f "$REPORT_DIR/index.html" ]]; then
    echo -e "${RED}‚ùå index.html –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–º. –ª–æ–≥: $PROJECT_PATH/$LOG_FILE${RESET}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –æ—à–∏–±–æ–∫ (0.html, 1.html –∏ —Ç.–¥.)
if ! find "$REPORT_DIR" -maxdepth 1 -type f -name '[0-9]*.html' | grep -q .; then
    echo -e "${YELLOW}‚ö†Ô∏è –û—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ $PROJECT_PATH/$REPORT_DIR${RESET}"
fi

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo -e "${GREEN}‚úÖ –û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤: $PROJECT_PATH/$REPORT_DIR/index.html${RESET}"
echo -e "${YELLOW}üö® –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: $ERROR_COUNT${RESET}"

# –û—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if [[ "$OPEN_REPORT" == true ]]; then
    if command -v xdg-open &>/dev/null; then
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
        nohup xdg-open "$REPORT_DIR/index.html" >/dev/null 2>&1 &
        echo "[$(date)] –ó–∞–ø—É—â–µ–Ω xdg-open –¥–ª—è $REPORT_DIR/index.html" >> "$LOG_FILE"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –£—Ç–∏–ª–∏—Ç–∞ xdg-open –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û—Ç—á–µ—Ç –Ω–µ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.${RESET}"
    fi
fi

# –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
if $PDF_AVAILABLE; then
    read -p "üìÑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å PDF –≤–µ—Ä—Å–∏–∏ –æ—Ç—á–µ—Ç–∞? [y/N]: " CREATE_PDF
    if [[ "$CREATE_PDF" =~ ^[Yy]$ ]]; then
        wkhtmltopdf "$REPORT_DIR/index.html" "$REPORT_DIR/report.pdf"
        echo -e "${GREEN}üìÅ PDF —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: $PROJECT_PATH/$REPORT_DIR/report.pdf${RESET}"
        echo "[$(date)] PDF —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω" >> "$LOG_FILE"
    fi
fi

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
read -p "üß™ –°–æ–∑–¥–∞—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç? [y/N]: " FILTER_AGREE
if [[ "$FILTER_AGREE" =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üéõ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:${RESET}"
    echo -e "  - severity: info, style, performance, portability, warning, error"
    echo -e "  - ID –æ—à–∏–±–∫–∏ (cppcheck)"
    read -p "üéØ Severity (e.g. warning|error): " SEVERITY
    read -p "üîç ID –æ—à–∏–±–æ–∫: " ERROR_ID

    TMP_XML_FILTERED="cppcheck_filtered.xml"
    cp "$TMP_XML_RAW" "$TMP_XML_FILTERED"
    [[ -n "$SEVERITY" ]] && xmlstarlet ed -d "//error[not(contains(@severity,'$SEVERITY'))]" "$TMP_XML_FILTERED" > "${TMP_XML_FILTERED}.tmp" && mv "${TMP_XML_FILTERED}.tmp" "$TMP_XML_FILTERED"
    [[ -n "$ERROR_ID" ]] && xmlstarlet ed -d "//error[not(contains(@id,'$ERROR_ID'))]" "$TMP_XML_FILTERED" > "${TMP_XML_FILTERED}.tmp" && mv "${TMP_XML_FILTERED}.tmp" "$TMP_XML_FILTERED"

    FILTER_DIR="cppcheck-html-filtered"
    rm -rf "$FILTER_DIR"
    mkdir -p "$FILTER_DIR"
    cppcheck-htmlreport --file="$TMP_XML_FILTERED" --report-dir="$FILTER_DIR" --source-dir="." >> "$LOG_FILE" 2>&1

    if [[ -f "$FILTER_DIR/index.html" ]]; then
        echo -e "${GREEN}‚úÖ –§–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤: $PROJECT_PATH/$FILTER_DIR/index.html${RESET}"
        read -p "üìÑ –û—Ç–∫—Ä—ã—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç? [y/N]: " OPEN_FILTERED
        if [[ "$OPEN_FILTERED" =~ ^[Yy]$ ]]; then
            xdg-open "$PROJECT_PATH/$FILTER_DIR/index.html" &>/dev/null &
        fi
        if $PDF_AVAILABLE; then
            read -p "üìÑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å PDF –≤–µ—Ä—Å–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞? [y/N]: " PDF_FILTERED
            if [[ "$PDF_FILTERED" =~ ^[Yy]$ ]]; then
                wkhtmltopdf "$FILTER_DIR/index.html" "$FILTER_DIR/report.pdf"
                echo -e "${GREEN}üìÅ PDF —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: $PROJECT_PATH/$FILTER_DIR/report.pdf${RESET}"
                echo "[$(date)] PDF —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω" >> "$LOG_FILE"
            fi
        fi
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç.${RESET}"
    fi
fi
